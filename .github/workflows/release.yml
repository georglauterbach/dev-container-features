---
name: Release

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ src/** ]

defaults:
  run:
    shell: bash

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  deployment:
    name: Deployment
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Acquire hermes
        run: |
          cd src/hermes
          wget --quiet https://github.com/georglauterbach/hermes/releases/download/v11.1.2/hermes-v11.1.2-aarch64-unknown-linux-musl
          wget --quiet https://github.com/georglauterbach/hermes/releases/download/v11.1.2/hermes-v11.1.2-x86_64-unknown-linux-musl

      - name: Publish Features
        uses: devcontainers/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish-features: 'true'
          base-path-to-features: ./src
          generate-docs: 'true'

      - name: Create PR for Documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo 'Setting up git'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global user.name 'github-actions[bot]'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git config pull.rebase false

          echo 'Creating new branch'
          BRANCH=automated-documentation-update-${GITHUB_RUN_ID}
          git checkout -b "${BRANCH}"

          echo 'Committing changes'
          git add ./src/**/README.md
          if git commit -m 'Automated documentation update [skip ci]'; then
            echo -e 'Changes committed\nPushing changes to remote'
            git push origin "${BRANCH}"
            MESSAGE='Automated documentation update'
            echo "Creating pull request"
            gh pr create --title "${MESSAGE}" --body "${MESSAGE}"
          else
            echo 'No changes present - nothing to commit and push'
          fi
